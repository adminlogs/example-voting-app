pipeline
{
	agent {
		docker { image 'maven:3.6.1-jdk-8-alpine'
		args '-v $HOME/.m2:/root/.m2'}
	}
	stages{
		stage("build"){
			when{
				changeset "**/worker/**"
			}
			steps
			{
				echo 'Compiling worker app'
				dir('worker'){
				sh 'mvn compile'
				}
			}
		}
		stage("test"){
			when{
				changeset "**/worker/**"
			}
			steps{
				echo 'Running Unit Tets on worker app'
				dir('worker'){
				sh 'mvn clean test'
				}
			}
		}
		stage("package"){
			when{
				branch 'master'
				changeset "**/worker/**"
			}
			steps{
				echo 'Packaging worker app'
				dir('worker'){
				sh 'mvn package -DskipTests'
				}
			}
		}
		stage("docker-package"){
                        when{
                                changeset "**/worker/**"
                        }
                        steps{
                                echo 'Packaging worker app with docker'
				script
				{
					docker.withRegistry('https://index.docker.io/v1', 'dockerlogin')
					{
						def workerImage = docker.build("adelelearning/worker:v${env.BUILD_ID}", "./worker")
						workerImage.push("${env.BRANCH_NAME}")
					}
				}
                        }
                }
	}

	post{
		always{
			echo 'Building multibranch pipeline for worker is completed..'
		}
		success{
			slackSend(channel: "#instavote-cd", message: "Build succedded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
		}
		failure{
			slackSend(channel: "#instavote-cd", message: "Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
		}
	}
}
